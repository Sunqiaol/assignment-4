{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","addCredit","placeholder","step","Debits","debits","debit","addDebit","App","logInInfo","newUser","currentUser","event","creditList","push","length","elements","Date","toLocaleDateString","Balance","parseFloat","reset","debitList","creditAmount","a","linkToAPI","axios","get","response","data","console","log","status","totalDebits","reduce","total","totalcredit","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22b3da9b.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport React, { Component } from 'react';\r\n\r\n\r\n\r\nconst Credits = (props) => {\r\n  let creditView = () => {\r\n    const { credits } = props;\r\n    \r\n\r\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = credit.date.slice(0,10);\r\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      Balance: {props.accountBalance} \r\n      <br/>\r\n      CreditList:\r\n      {creditView()}\r\n\r\n\r\n      <form onSubmit={props.addCredit}>\r\n        <input type=\"text\" name=\"description\" placeholder='Description'/>\r\n        <input type=\"number\" step = \"0.01\" name=\"amount\" placeholder='Amount' />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits; \r\n\r\n","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Debits = (props) => {\r\n  // Create the list of Debit items\r\n  let debitsView = () => {\r\n    const { debits } = props;\r\n   \r\n\r\n    \r\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = debit.date.slice(0,10);\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\r\n    });\r\n  }\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  \r\n  return (\r\n    <div>\r\n\r\n      <h1>Debits</h1>\r\n      Balance: {props.accountBalance} \r\n      <br/>\r\n      {debitsView()}\r\n\r\n      <form onSubmit={props.addDebit}>\r\n        <input type=\"text\" name=\"description\" placeholder='description'/>\r\n        <input type=\"number\" step = \"0.01\" name=\"amount\" placeholder='amount'/>\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Debits;","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component,} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 0,\r\n      creditList: [],\r\n      creditAmount : 0,\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n  \r\n \r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n \r\n\r\n    addCredit = (event) => {\r\n      event.preventDefault(); // Prevent the page from reloading on submit\r\n      const credit = this.state.creditList;\r\n      credit.push({\r\n        id:this.state.creditList.length + 1,\r\n        description: event.target.elements.description.value,\r\n        amount: event.target.elements.amount.value,\r\n        date: new Date().toLocaleDateString() // Add the current date\r\n      });\r\n      this.setState({creditList:credit});\r\n      const Balance = this.state.accountBalance+parseFloat(event.target.elements.amount.value)\r\n      this.setState({accountBalance:Balance})\r\n      event.target.reset(); // Reset the form fields to their initial state\r\n    };\r\n    \r\n    addDebit = (event) => {\r\n      event.preventDefault(); // Prevent the page from reloading on submit\r\n      const debit = this.state.debitList;\r\n      debit.push({\r\n        id:this.state.debitList.length + 1,\r\n        description: event.target.elements.description.value,\r\n        amount: event.target.elements.amount.value,\r\n        date: new Date().toLocaleDateString() // Add the current date\r\n      });\r\n      this.setState({debitList:debit});\r\n      const Balance = this.state.accountBalance-parseFloat(event.target.elements.amount.value)\r\n      this.setState({accountBalance:Balance})\r\n      event.target.reset(); // Reset the form fields to their initial state\r\n    };\r\n   \r\n\r\n  async componentDidMount() {\r\n    let linkToAPI = 'https://johnnylaicode.github.io/api/credits.json';  // Link to remote website API endpoint\r\n\r\n    // Await for promise (completion) returned from API call\r\n    try {  // Accept success response as array of JSON objects (users)\r\n      let response = await axios.get(linkToAPI);\r\n      // To get data object in the response, need to use \"response.data\"\r\n      this.setState({creditList: response.data});  // Store received data in state's \"users\" object\r\n    } \r\n    catch (error) {  // Print out errors at console when there is an error response\r\n      if (error.response) {\r\n        // The request was made, and the server responded with error message and status code.\r\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\r\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\r\n      }    \r\n    }\r\n\r\n    linkToAPI = 'https://johnnylaicode.github.io/api/debits.json';\r\n    try {  // Accept success response as array of JSON objects (users)\r\n      let response = await axios.get(linkToAPI);\r\n      // To get data object in the response, need to use \"response.data\"\r\n      this.setState({debitList: response.data});  // Store received data in state's \"users\" object\r\n    } \r\n    catch (error) {  // Print out errors at console when there is an error response\r\n      if (error.response) {\r\n        // The request was made, and the server responded with error message and status code.\r\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\r\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\r\n      }    \r\n    }\r\n\r\n    const totalDebits = this.state.debitList.reduce((total,debits) => total + debits.amount,0)\r\n    const totalcredit = this.state.creditList.reduce((total,credits) => total + credits.amount,0)\r\n    this.setState({accountBalance:totalcredit-totalDebits})\r\n  }\r\n\r\n \r\n \r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (\r\n      <Credits credits={this.state.creditList} accountBalance={this.state.accountBalance}  addCredit = {this.addCredit} />) \r\n    const DebitsComponent = () => (\r\n    <Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebit = {this.addDebit} />) \r\n    \r\n      \r\n  \r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/my-react-app\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}